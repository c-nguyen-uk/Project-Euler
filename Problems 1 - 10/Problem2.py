# -*- coding: utf-8 -*-
"""Problem 2: Even Fibonacci numbers

https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the
previous two terms.  By starting with 1 and 2, the first 10 terms will
be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
"""
from custom_timer import computation_time


def fib(a, b, L):
    """Return a list of Fibonacci terms, initialised with a and b, up to L."""
    fib_list = [a, b]
    while fib_list[-1] < L:
        fib_list.append(fib_list[-1] + fib_list[-2])
    return fib_list


@computation_time
def solution():
    """Return the solution."""
    return sum([i for i in fib(1, 2, 4000000) if i % 2 == 0])


print(solution())
